name: "build"
on:
  push:
    branches: "**"
    tags-ignore: [ "**" ]
  pull_request:
  release:
    types: [ released ]
jobs:
  build:
    strategy:
      matrix:
        java: [ "21" ]
        os: [ "ubuntu-latest" ]
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: "${{ matrix.os }}"
    steps:
      - name: "checkout repository"
        uses: "actions/checkout@v5"
      - name: "setup jdk ${{ matrix.java }}"
        uses: "actions/setup-java@v5"
        with:
          distribution: 'temurin'
          java-version: "${{ matrix.java }}"
      - name: "setup gradle"
        uses: gradle/actions/setup-gradle@v4
      - name: "build"
        run: "./gradlew build"
      - name: "determine status"
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: "publish 'gradle-plugin' snapshot"
        if: "${{ env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
        run: ./gradlew :gremlin-gradle:publishAllPublicationsToJmpRepository
        env:
          ORG_GRADLE_PROJECT_jmpUsername: "${{ secrets.JMP_REPO_USER }}"
          ORG_GRADLE_PROJECT_jmpPassword: "${{ secrets.JMP_REPO_PASSWORD }}"
      - name: "publish 'runtime' snapshot"
        if: "${{ env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
        run: ./gradlew :gremlin-runtime:publishAllPublicationsToSonatypeSnapshots
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.SONATYPE_PASSWORD }}"
      - name: "publish 'gradle-plugin' release"
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew :gremlin-gradle:publishPlugins
        env:
          ORG_GRADLE_PROJECT_pluginPortalApiKey: "${{ secrets.GRADLE_PLUGIN_PORTAL_KEY }}"
          ORG_GRADLE_PROJECT_pluginPortalApiSecret: "${{ secrets.GRADLE_PLUGIN_PORTAL_SECRET }}"
          ORG_GRADLE_PROJECT_signingKey: "${{ secrets.SIGNING_KEY }}"
          ORG_GRADLE_PROJECT_signingPassword: "${{ secrets.SIGNING_PASSWORD }}"
      - name: "publish 'runtime' release"
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew publishReleaseCentralPortalBundle
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.SONATYPE_PASSWORD }}"
          ORG_GRADLE_PROJECT_signingKey: "${{ secrets.SIGNING_KEY }}"
          ORG_GRADLE_PROJECT_signingPassword: "${{ secrets.SIGNING_PASSWORD }}"
